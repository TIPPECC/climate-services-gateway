{"version":3,"file":"12.BjOTrJsh.js","sources":["../../../../../../node_modules/.pnpm/ol@9.1.0/node_modules/ol/renderer/canvas/TileLayer.js","../../../../../../node_modules/.pnpm/ol@9.1.0/node_modules/ol/layer/Tile.js","../../../../../../src/lib/auto_description.js","../../../../../../src/lib/ExtentOnMap.svelte","../../../../../../src/lib/icons/file-info-alt-1-svgrepo-com.svg","../../../../../../src/lib/FileDetailsSingleFile.svelte","../../../../../../src/routes/climate_services_gateway/file_info/+page.svelte"],"sourcesContent":["/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","export function auto_description(filename, foldertype, metadata) {\n\tlet error = false;\n\tlet variable_name = metadata['file']['long_name'];\n\tlet frequency = metadata['file']['frequency'] + 'ly';\n\tlet study_area = 'None';\n\tlet bias_correction = false;\n\tlet global_type = 'None';\n\tlet global_model = 'None';\n\tlet regional_model = 'None';\n\tlet period_1 = 'None';\n\tlet period_2 = 'None';\n\tlet mean = false;\n\tlet description = '';\n\n\tif (frequency == 'dayly') {\n\t\tfrequency = 'daily';\n\t}\n\tif (foldertype.includes('vaal')) {\n\t\tstudy_area = 'Vaal';\n\t} else if (foldertype.includes('kunene')) {\n\t\tstudy_area = 'Kunene';\n\t} else if (foldertype.includes('luanginga')) {\n\t\tstudy_area = 'Luanginga';\n\t}\n\tif (filename.includes('_b_')) {\n\t\tbias_correction = true;\n\t}\n\tif (foldertype.includes('CORDEX')) {\n\t\tglobal_type = 'Cordex-Core';\n\n\t\tif (filename.includes('REMO')) {\n\t\t\tregional_model = 'GERICS-REMO2015';\n\t\t} else if (filename.includes('KIT')) {\n\t\t\tregional_model = 'KIT-CCLM5-0-15';\n\t\t} else if (filename.includes('ICTP')) {\n\t\t\tregional_model = 'ICTP-RegCM4-7';\n\t\t}\n\t\tglobal_model = metadata['driving_model_id'];\n\t} else if (foldertype.includes('CMIP6')) {\n\t\tglobal_type = 'CMIP6';\n\t\tglobal_model = metadata['source_id'];\n\t} else if (foldertype.includes('ERA5')) {\n\t\tglobal_type = 'Era5-Land';\n\t} else if (foldertype.includes('GLEAM')) {\n\t\tglobal_type = 'GLEAM';\n\t}\n\tif (filename.includes('yearsum') || filename.includes('yearmean')) {\n\t\tfrequency = 'annual aggregated';\n\t\tlet matchComparison = filename.match(/year(?:sum|mean)_(\\d{4})_(\\d{4})-(\\d{4})_(\\d{4})/);\n\t\tlet matchSingle = filename.match(/year(?:sum|mean)_(\\d{4}_\\d{4})/);\n\n\t\tif (matchComparison) {\n\t\t\tperiod_2 = `${matchComparison[1]}–${matchComparison[2]}`;\n\t\t\tperiod_1 = `${matchComparison[3]}–${matchComparison[4]}`;\n\t\t} else if (matchSingle) {\n\t\t\tif (matchSingle) {\n\t\t\t\tperiod_1 = `${matchSingle[1]}–${matchSingle[2]}`;\n\t\t\t}\n\t\t}\n\t}\n\tif (filename.includes('_mean_')) {\n\t\tmean = true;\n\t\tlet matchComparison = filename.match(/_mean_(\\d{4})_(\\d{4})-(\\d{4})_(\\d{4})/);\n\t\tlet matchSingle = filename.match(/_mean_(\\d{4})_(\\d{4})/);\n\t\tif (matchComparison) {\n\t\t\tperiod_2 = `${matchComparison[1]}–${matchComparison[2]}`;\n\t\t\tperiod_1 = `${matchComparison[3]}–${matchComparison[4]}`;\n\t\t} else if (matchSingle) {\n\t\t\tif (matchSingle) {\n\t\t\t\tperiod_1 = `${matchSingle[1]}–${matchSingle[2]}`;\n\t\t\t}\n\t\t}\n\t}\n\tif (mean) {\n\t\tdescription += 'mean value of ';\n\t}\n\tif (frequency != 'nonely') {\n\t\tdescription += frequency + ' data of ';\n\t}\n\tdescription += variable_name + ' ';\n\tif (global_type != 'None') {\n\t\tdescription += 'based on ' + global_type + ' ';\n\t\tif (global_model != 'None') {\n\t\t\tdescription += global_model + ' global model ';\n\t\t} else {\n\t\t\tdescription += 'dataset ';\n\t\t}\n\t\tif (regional_model != 'None') {\n\t\t\tdescription += 'and ' + regional_model + ' regional model ';\n\t\t}\n\t\tif (bias_correction) {\n\t\t\tdescription += 'with bias correction ';\n\t\t}\n\t\tif (period_1 != 'None') {\n\t\t\tdescription += 'for time period ' + period_1 + ' ';\n\t\t}\n\t\tif (period_2 != 'None') {\n\t\t\tdescription += 'compared to ' + period_2 + ' ';\n\t\t}\n\t\tif (study_area != 'None') {\n\t\t\tdescription += 'clipped to ' + study_area + ' study area ';\n\t\t}\n\t}\n\tdescription = format_sentence(description);\n\treturn description;\n}\n\nfunction format_sentence(str) {\n\tif (!str) return '';\n\n\t// Trim trailing whitespace\n\tstr = str.trimEnd();\n\n\t// Capitalize first letter\n\tstr = str.charAt(0).toUpperCase() + str.slice(1);\n\n\t// Add period if not already present\n\tif (!str.endsWith('.')) {\n\t\tstr += '.';\n\t}\n\n\treturn str;\n}\n","<script>\n\timport { onMount } from 'svelte';\n\timport { Feature } from 'ol';\n\timport { Polygon } from 'ol/geom';\n\timport { Vector as VectorSource } from 'ol/source';\n\timport VectorLayer from 'ol/layer/Vector';\n\timport { Style, Stroke, Fill } from 'ol/style';\n\timport Map from 'ol/Map';\n\timport TileLayer from 'ol/layer/Tile';\n\timport OSM from 'ol/source/OSM';\n\timport 'ol/ol.css';\n\timport View from 'ol/View';\n\n\texport let extent;\n\t/**\n\t * Draws a bounding box on an OpenLayers map from extent.\n\t * @param {Map} map - OpenLayers map instance\n\t * @param {[number, number, number, number]} extent - [minX, minY, maxX, maxY]\n\t * @param {string} [projection='EPSG:4326'] - Coordinate projection of extent\n\t */\n\texport function drawExtentBox(map, extent, projection = 'EPSG:4326') {\n\t\tif (!map || !extent || extent.length !== 4) {\n\t\t\tconsole.error('Invalid map or extent');\n\t\t\treturn;\n\t\t}\n\n\t\tconst [minX, minY, maxX, maxY] = extent;\n\t\tconst polygon = new Polygon([\n\t\t\t[\n\t\t\t\t[minX, minY],\n\t\t\t\t[minX, maxY],\n\t\t\t\t[maxX, maxY],\n\t\t\t\t[maxX, minY],\n\t\t\t\t[minX, minY] // close the loop\n\t\t\t]\n\t\t]);\n\n\t\tpolygon.transform(projection, map.getView().getProjection());\n\n\t\tconst feature = new Feature(polygon);\n\n\t\tconst vectorSource = new VectorSource({\n\t\t\tfeatures: [feature]\n\t\t});\n\n\t\tconst vectorLayer = new VectorLayer({\n\t\t\tsource: vectorSource,\n\t\t\tstyle: new Style({\n\t\t\t\tstroke: new Stroke({\n\t\t\t\t\tcolor: 'rgba(255, 120, 0, 0.8)',\n\t\t\t\t\twidth: 2\n\t\t\t\t}),\n\t\t\t\tfill: new Fill({\n\t\t\t\t\tcolor: 'rgba(255, 120, 0, 0.2)'\n\t\t\t\t})\n\t\t\t})\n\t\t});\n\n\t\tmap.addLayer(vectorLayer);\n\t\tmap.getView().fit(polygon, { padding: [20, 20, 20, 20] });\n\n\t\treturn vectorLayer;\n\t}\n\n\tonMount(() => {\n\t\tlet map = new Map({\n\t\t\ttarget: 'map',\n\t\t\tlayers: [\n\t\t\t\tnew TileLayer({\n\t\t\t\t\tsource: new OSM()\n\t\t\t\t})\n\t\t\t],\n\t\t\tview: new View({\n\t\t\t\tcenter: [0, 0],\n\t\t\t\tzoom: 2,\n\t\t\t\tprojection: 'EPSG:3857'\n\t\t\t})\n\t\t});\n\n\t\tdrawExtentBox(map, extent);\n\t});\n</script>\n\n<div id=\"map\" />\n\n<style>\n\t#map {\n\t\twidth: 100%;\n\t\theight: 400px;\n\t\tborder-radius: 1rem;\n\t\tbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n\t\tmargin: 1rem 0;\n\t}\n</style>\n","export default \"data:image/svg+xml,%3c!DOCTYPE%20svg%20PUBLIC%20'-//W3C//DTD%20SVG%201.1//EN'%20'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3e%3c!--%20Uploaded%20to:%20SVG%20Repo,%20www.svgrepo.com,%20Transformed%20by:%20SVG%20Repo%20Mixer%20Tools%20--%3e%3csvg%20width='800px'%20height='800px'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20id='SVGRepo_bgCarrier'%20stroke-width='0'/%3e%3cg%20id='SVGRepo_tracerCarrier'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3cg%20id='SVGRepo_iconCarrier'%3e%3cpath%20d='M17%2018V21M17%2015H17.01M13%203V7.4C13%207.96005%2013%208.24008%2013.109%208.45399C13.2049%208.64215%2013.3578%208.79513%2013.546%208.89101C13.7599%209%2014.0399%209%2014.6%209H19M13%203H8.2C7.0799%203%206.51984%203%206.09202%203.21799C5.71569%203.40973%205.40973%203.71569%205.21799%204.09202C5%204.51984%205%205.0799%205%206.2V17.8C5%2018.9201%205%2019.4802%205.21799%2019.908C5.40973%2020.2843%205.71569%2020.5903%206.09202%2020.782C6.51984%2021%207.0799%2021%208.2%2021H13M13%203L19%209M19%209V11.5'%20stroke='%23ffffff'%20stroke-width='2'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3c/g%3e%3c/svg%3e\"","<script>\n\timport { TabGroup, Tab, TabAnchor } from '@skeletonlabs/skeleton';\n\timport { API_URL } from '../app.config.js';\n\timport Download from '$lib/icons/download.svelte';\n\timport { auto_description } from '$lib/auto_description.js';\n\timport { sizeofFmt, round } from '$lib/toolbox';\n\timport Map from '$lib/tempresults/tif_map.svelte';\n\timport MetadataDisplay from '$lib/MetadataDisplay.svelte';\n\timport CitationView from '$lib/CitationView.svelte';\n\timport ProvenanceView from '$lib/ProvenanceView.svelte';\n\timport ProvenanceListView from '$lib/ProvenanceListView.svelte';\n\timport ExtentOnMap from './ExtentOnMap.svelte';\n\timport file_icon from '$lib/icons/file-info-alt-1-svgrepo-com.svg';\n\t// import { json } from 'stream/consumers';\n\texport let folder_data;\n\texport let file_obj;\n\texport let foldertype;\n\texport let in_main_page;\n\n\tlet show_geo = true;\n\n\tif (file_obj != null) {\n\t\tfolder_data = folder_data[file_obj.index];\n\t}\n\t$: selected_file = folder_data['filename'];\n\tlet description = 'No description available';\n\tif (!in_main_page) {\n\t\ttry {\n\t\t\tdescription = auto_description(folder_data['filename'], foldertype, folder_data['metadata']);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\tlet random_id = Math.random().toString(36).substring(2, 15); // Generate a random ID\n\tlet tabSet = folder_data['tabset']; // default tab\n\n\t/**\n\t * @param {any} value\n\t */\n\tfunction format_c_bound(value) {\n\t\tif (typeof value == 'object') {\n\t\t\tconst start = value[0].split('-')[0];\n\t\t\tconst end = value[1].split('-')[0];\n\t\t\treturn start + ' - ' + end;\n\t\t} else {\n\t\t\tconst parts = value.split('-');\n\t\t\tconst start = parts[0];\n\t\t\treturn start;\n\t\t}\n\t}\n</script>\n\n<br />\n<div class=\"\">\n\t<div class=\"flex items-center justify-between mb-3\">\n\t\t<h2 class=\"text-lg text-label font-semibold flex items-center gap-2 text-white\">\n\t\t\t<img src={file_icon} alt=\"...\" width=\"30px\" />\n\t\t\t{folder_data['filename']}\n\t\t</h2>\n\n\t\t<a\n\t\t\thref=\"/climate_services_gateway/collections/?type={foldertype}&filename={folder_data[\n\t\t\t\t'filename'\n\t\t\t]}\"\n\t\t\tclass=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n\t\t>\n\t\t\tCollection View\n\t\t</a>\n\t</div>\n\t<div class=\"bg-surface-700 rounded-lg p-4\">\n\t\t<span class=\"font-semibold\">{description}</span>\n\t</div>\n\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-y-2 gap-x-4 mt-4 bg-surface-800 rounded-lg\">\n\t\t<div class=\"p-4\">\n\t\t\t<div class=\"font-bold text-lg\">Variable</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Short Name:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['short_variable_name']}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Long Name:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['long_name']}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Unit:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['unit']}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Cell Method:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['cell_methods']}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Global Min / Max:</span>\n\t\t\t\t<span class=\"font-medium text-zinc-300\"\n\t\t\t\t\t>{round(folder_data['metadata']['file']['global_min'], 2)} / {round(\n\t\t\t\t\t\tfolder_data['metadata']['file']['global_max'],\n\t\t\t\t\t\t2\n\t\t\t\t\t)}</span\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Experiment ID:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['experiment_id']}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Bias Correction:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['bias_correction']}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Indicator:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['indicator']}</span>\n\t\t\t</div>\n\t\t\t<div class=\"font-bold text-lg mt-4\">Spatial</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Resolution:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['nominal_resolution']}</span>\n\t\t\t</div>\n\n\t\t\t<div class=\"font-bold text-lg mt-4\">Time</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Coverage:</span>\n\t\t\t\t<span class=\"ml-2\"\n\t\t\t\t\t>{folder_data['metadata']['file']['time_coverage_start']} - {folder_data['metadata'][\n\t\t\t\t\t\t'file'\n\t\t\t\t\t]['time_coverage_end']}</span\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Frequency:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['frequency']} </span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Number of time steps:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['num_time_steps']} </span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Units:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['time_units']}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Calendar:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['time_calendar']} </span>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Resolution sfsfsdf:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['nominal_resolution']}</span>\n\t\t\t</div>\n\t\t\t{#if folder_data['metadata']['file']['climatology_bounds']}\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Climatology Bounds Start:</span>\n\t\t\t\t\t<span class=\"ml-2\"\n\t\t\t\t\t\t>{format_c_bound(folder_data['metadata']['file']['climatology_bounds'][0][0])}</span\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Climatology Bounds End:</span>\n\t\t\t\t\t<span class=\"ml-2\"\n\t\t\t\t\t\t>{format_c_bound(folder_data['metadata']['file']['climatology_bounds'][0][1])}</span\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t{#if folder_data['metadata']['file']['climatology_bounds_details']}\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Climatology Bounds 1st Period:</span>\n\t\t\t\t\t<span class=\"ml-2\"\n\t\t\t\t\t\t>{format_c_bound(\n\t\t\t\t\t\t\tfolder_data['metadata']['file']['climatology_bounds_details'][0]\n\t\t\t\t\t\t)}</span\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Climatology Bounds 2nd Period:</span>\n\t\t\t\t\t<span class=\"ml-2\"\n\t\t\t\t\t\t>{format_c_bound(\n\t\t\t\t\t\t\tfolder_data['metadata']['file']['climatology_bounds_details'][1]\n\t\t\t\t\t\t)}</span\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t<div class=\"font-bold text-lg mt-4\">File</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Format:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['file_format']}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Size:</span>\n\t\t\t\t<span class=\"ml-2\">{sizeofFmt(folder_data['metadata']['file']['file_size'])}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold ml-4 text-blue-400\">Created:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['birth_time']}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span class=\"ffont-bold ml-4\">Last Modified:</span>\n\t\t\t\t<span class=\"ml-2\">{folder_data['metadata']['file']['last_modification_time']}</span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"p-4\">\n\t\t\t<ExtentOnMap\n\t\t\t\textent={[\n\t\t\t\t\tfolder_data['metadata']['file']['geospatial_lon_min'],\n\t\t\t\t\tfolder_data['metadata']['file']['geospatial_lat_min'],\n\t\t\t\t\tfolder_data['metadata']['file']['geospatial_lon_max'],\n\t\t\t\t\tfolder_data['metadata']['file']['geospatial_lat_max']\n\t\t\t\t]}\n\t\t\t/>\n\n\t\t\t<h2 class=\"text-lg font-semibold mb-3 flex items-center gap-2 text-white\">ℹ️ Cite as:</h2>\n\t\t\t<div>\n\t\t\t\t<span class=\"font-bold text-blue-400\">Reference:</span>\n\t\t\t\t<span>please contact the TIPPECC team</span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<CitationView file={folder_data['metadata']['file']} in_main_page={false} />\n\t<div class=\"grid grid-cols-1 md:grid-cols-2 gap-y-2 gap-x-4 text-zinc-200 mt-3\" />\n</div>\n\n<TabGroup>\n\t<Tab bind:group={tabSet} name=\"tab1\" value={0}>\n\t\t<svelte:fragment slot=\"lead\" />\n\t\t<span>Other Metadata</span>\n\t</Tab>\n\t<Tab bind:group={tabSet} name=\"tab1\" value={1}>Related Datasets</Tab>\n\t<Tab bind:group={tabSet} name=\"tab2\" value={2}>Provenance</Tab>\n\t{#if folder_data['tif_convertable']}\n\t\t<Tab bind:group={tabSet} name=\"tab4\" value={3}>Map</Tab>\n\t{/if}\n\t<svelte:fragment slot=\"panel\">\n\t\t{#if tabSet === 0}\n\t\t\t{#if folder_data['metadata_exists']}\n\t\t\t\t<button\n\t\t\t\t\tclass=\"ml-2 mr-1 max-h-[33px] p-1 flex items-center justify-center variant-filled-tertiary hover:bg-tertiary-900 rounded-md\"\n\t\t\t\t>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"{API_URL}/climate/get_temp_file?name={folder_data[\n\t\t\t\t\t\t\t'filename'\n\t\t\t\t\t\t]}&type={foldertype}&filetype=meta\"\n\t\t\t\t\t\tclass=\"flex\"\n\t\t\t\t\t\ttitle=\"Download metadata file\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Download />\n\t\t\t\t\t\t<div class=\"ml-1 flex place-items-center justify-items-center\">metadata</div>\n\t\t\t\t\t</a>\n\t\t\t\t</button>\n\n\t\t\t\t{#if folder_data['metadata'] && folder_data['metadata_show']}\n\t\t\t\t\t<MetadataDisplay data={folder_data['metadata']} {in_main_page} />\n\t\t\t\t{/if}\n\t\t\t{:else}\n\t\t\t\tcurrently no metadata available\n\t\t\t{/if}\n\t\t{:else if tabSet === 1}\n\t\t\t{#if folder_data['metadata_prov_stats']}\n\t\t\t\t<div class=\"bg-box\" id=\"base_for_entities_{random_id}\">\n\t\t\t\t\t<h2 class=\"text-lg font-semibold mb-3 flex items-center gap-2 text-white\">\n\t\t\t\t\t\tℹ️ Available files based on this file\n\t\t\t\t\t</h2>\n\t\t\t\t\t<ProvenanceListView\n\t\t\t\t\t\tdata={folder_data['metadata_prov_stats']?.['base_for_entities']}\n\t\t\t\t\t\tonly_links={true}\n\t\t\t\t\t\t{in_main_page}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bg-box\" id=\"base_for_entities_{random_id}\">\n\t\t\t\t\t<h2 class=\"text-lg font-semibold mb-3 flex items-center gap-2 text-white\">\n\t\t\t\t\t\tℹ️ Available files used to create this file\n\t\t\t\t\t</h2>\n\t\t\t\t\t<ProvenanceListView\n\t\t\t\t\t\tdata={folder_data['metadata_prov_stats']?.['source_entities']}\n\t\t\t\t\t\tonly_links={true}\n\t\t\t\t\t\t{in_main_page}\n\t\t\t\t\t/>\n\t\t\t\t\t<ProvenanceListView\n\t\t\t\t\t\tdata={folder_data['metadata_prov_stats']?.['result_entities']}\n\t\t\t\t\t\tonly_links={true}\n\t\t\t\t\t\t{in_main_page}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t{:else}\n\t\t\t\tcurrently no related datasets available\n\t\t\t{/if}\n\t\t{:else if tabSet === 2}\n\t\t\t{#if folder_data['metadata_prov_exists'] && folder_data['metadata_show']}\n\t\t\t\t<button\n\t\t\t\t\tclass=\"ml-2 mr-1 max-h-[33px] p-1 flex items-center justify-center variant-filled-tertiary hover:bg-tertiary-900 rounded-md\"\n\t\t\t\t>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"{API_URL}/climate/get_temp_file?name={folder_data[\n\t\t\t\t\t\t\t'filename'\n\t\t\t\t\t\t]}&type={foldertype}&filetype=prov\"\n\t\t\t\t\t\tclass=\"flex\"\n\t\t\t\t\t\ttitle=\"Download metadata file\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Download />\n\t\t\t\t\t\t<!--icon download-->\n\n\t\t\t\t\t\t<div class=\"ml-1 flex place-items-center justify-items-center\">provenance</div>\n\t\t\t\t\t</a>\n\t\t\t\t</button>\n\t\t\t\t{#if folder_data['metadata_prov_stats']}\n\t\t\t\t\t<ProvenanceView\n\t\t\t\t\t\tbind:metadata_prov={folder_data['metadata_prov']}\n\t\t\t\t\t\tbind:metadata_prov_stats={folder_data['metadata_prov_stats']}\n\t\t\t\t\t\t{in_main_page}\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t{:else}\n\t\t\t\tcurrently no provenance data available\n\t\t\t{/if}\n\t\t{:else if tabSet === 3}\n\t\t\t{#if selected_file && selected_file != ''}\n\t\t\t\t{#key selected_file}\n\t\t\t\t\t<Map {foldertype} bind:selected_file show_varinfos={false} />\n\t\t\t\t{/key}\n\t\t\t{/if}\n\t\t{/if}\n\t</svelte:fragment>\n</TabGroup>\n\n<style>\n\t.bg-box {\n\t\tbackground-color: #1f2937; /* Dunkelgrau (zinc-800) als Standardhintergrund */\n\t\tborder: 1px solid #374151; /* Etwas dunklerer Rand (zinc-700) */\n\t\tborder-radius: 1rem; /* abgerundete Ecken */\n\t\tpadding: 1rem; /* Innenabstand */\n\t\tbox-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Schatten für den 3D-Effekt */\n\t\tmargin-bottom: 1rem; /* Abstand nach unten */\n\t\tmargin-top: 1rem; /* Abstand nach oben */\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { API_URL } from '../../../app.config';\n\timport { browser } from '$app/environment';\n\timport metadata_icon from '$lib/icons/tag-label-svgrepo-com.svg';\n\n\timport { onMount, tick } from 'svelte';\n\timport {\n\t\t_fetch_foldercontent_by_type,\n\t\t_fetch_foldercontent_force_update,\n\t\t_fetch_file_info\n\t} from '$lib/fetch_folder_content';\n\timport FileDetails from '$lib/FileDetailsSingleFile.svelte';\n\n\tlet metadata: any = ([] = []);\n\tlet folder_data: FileinfoFormat;\n\tconst file_obj = null;\n\tconst in_main_page = false;\n\tlet foldertype = '';\n\tlet file = '';\n\n\t$: if (browser) {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\tconst type = urlParams.get('type');\n\t\tif (type) {\n\t\t\tfoldertype = type;\n\t\t}\n\t\tconst filename = urlParams.get('filename');\n\t\tif (filename) {\n\t\t\tfile = filename;\n\t\t}\n\t}\n\n\ttype FileinfoFormat = {\n\t\tfileversion: string;\n\t\tnum_bands: number;\n\t\tcreation_date: string;\n\t\tfilename: string;\n\t\tfilesize: string;\n\t\tin_limit_conversion: boolean;\n\t\tdirty: boolean;\n\t\tfilesuffix: string;\n\t\tdat_exists: boolean;\n\t\ttif_exists: boolean;\n\t\ttif_convertable: boolean;\n\t\tmetadata_exists: boolean;\n\t\tmetadata: any;\n\t\tmetadata_prov: any;\n\t\tmetadata_prov_exists: boolean;\n\t\tmetadata_prov_stats?: any;\n\t\tmetadata_prov_stats_exists?: boolean;\n\t\tmetadata_show?: boolean;\n\t\ttabset?: number; // Added tabset property\n\t};\n\n\tasync function loadFileInfo(foldertype: string, file: string) {\n\t\tfolder_data = await _fetch_file_info(foldertype, file);\n\t\tconsole.log(folder_data); // Jetzt hast du das richtige Datenobjekt\n\t\tget_metadata_and_prov(file, foldertype);\n\t}\n\n\tasync function get_metadata_and_prov(filename: string, foldertype: string) {\n\t\tconsole.log('get_metadata_and_prov', filename, foldertype, file_obj);\n\t\tfolder_data['tabset'] = 0;\n\t\tconst res = await fetch(\n\t\t\tAPI_URL +\n\t\t\t\t'/climate/get_temp_file?name=' +\n\t\t\t\tfilename +\n\t\t\t\t'&type' +\n\t\t\t\t'=' +\n\t\t\t\tfoldertype +\n\t\t\t\t'&filetype=meta',\n\t\t\t{\n\t\t\t\tmethod: 'GET'\n\t\t\t}\n\t\t);\n\t\tif (!res.ok) {\n\t\t\tif (!folder_data['metadata']) {\n\t\t\t\tfolder_data['metadata'] = {};\n\t\t\t}\n\t\t\tfolder_data['metadata'] = {\n\t\t\t\t'currently no metadata available': 'for this file'\n\t\t\t};\n\t\t\tfolder_data['metadata_exists'] = false;\n\t\t\tconsole.log(folder_data['metadata']);\n\t\t\t// folder_data = [...folder_data];\n\t\t\t// throw new Error(`${res.status} ${res.statusText}`);\n\t\t} else {\n\t\t\tconst result = await res.json();\n\t\t\tmetadata = result;\n\t\t\tawait tick();\n\t\t\tif (!folder_data['metadata']) {\n\t\t\t\tfolder_data['metadata'] = {};\n\t\t\t}\n\t\t\tfolder_data['metadata_exists'] = true;\n\t\t\tfolder_data['metadata'] = result;\n\t\t\tawait tick();\n\t\t\t// folder_data = [...folder_data];\n\t\t\tconsole.log(metadata);\n\t\t}\n\n\t\tconst res2 = await fetch(\n\t\t\tAPI_URL +\n\t\t\t\t'/climate/get_temp_file?name=' +\n\t\t\t\tfilename +\n\t\t\t\t'&type' +\n\t\t\t\t'=' +\n\t\t\t\tfoldertype +\n\t\t\t\t'&filetype=prov',\n\t\t\t{\n\t\t\t\tmethod: 'GET'\n\t\t\t}\n\t\t);\n\t\tif (!res2.ok) {\n\t\t\tif (!folder_data['metadata_prov']) {\n\t\t\t\tfolder_data['metadata_prov'] = {};\n\t\t\t}\n\t\t\tfolder_data['metadata_prov_exists'] = false;\n\t\t\tfolder_data['metadata_prov'] = {\n\t\t\t\t'currently no provenance information available': 'for this file'\n\t\t\t};\n\t\t\tconsole.log(folder_data['metadata_prov']);\n\t\t\t// folder_data = [...folder_data];\n\t\t\t// throw new Error(`${res.status} ${res.statusText}`);\n\t\t} else {\n\t\t\tconst result = await res2.json();\n\t\t\tmetadata = result;\n\t\t\tawait tick();\n\t\t\tif (!folder_data['metadata_prov']) {\n\t\t\t\tfolder_data['metadata_prov'] = {};\n\t\t\t}\n\t\t\tfolder_data['metadata_prov_exists'] = true;\n\t\t\tfolder_data['metadata_prov'] = result;\n\t\t\tawait tick();\n\t\t\t//  folder_data = [...folder_data];\n\t\t\tconsole.log(metadata);\n\t\t}\n\n\t\tconst res3 = await fetch(\n\t\t\tAPI_URL +\n\t\t\t\t'/climate/get_temp_file?name=' +\n\t\t\t\tfilename +\n\t\t\t\t'&type' +\n\t\t\t\t'=' +\n\t\t\t\tfoldertype +\n\t\t\t\t'&filetype=prov_stats',\n\t\t\t{\n\t\t\t\tmethod: 'GET'\n\t\t\t}\n\t\t);\n\t\tif (!res3.ok) {\n\t\t\tif (!folder_data['metadata_prov_stats']) {\n\t\t\t\tfolder_data['metadata_prov_stats'] = {};\n\t\t\t}\n\t\t\tfolder_data['metadata_prov_stats_exists'] = false;\n\t\t\tfolder_data['metadata_prov_stats'] = {\n\t\t\t\t'currently no provenance information available': 'for this file'\n\t\t\t};\n\t\t\tconsole.log(folder_data['metadata_prov_stats']);\n\t\t\t// folder_data = [...folder_data];\n\t\t\t// throw new Error(`${res.status} ${res.statusText}`);\n\t\t} else {\n\t\t\tconst result = await res3.json();\n\t\t\tmetadata = result;\n\t\t\tawait tick();\n\t\t\tif (!folder_data['metadata_prov_stats']) {\n\t\t\t\tfolder_data['metadata_prov_stats'] = {};\n\t\t\t}\n\t\t\tfolder_data['metadata_prov_stats_exists'] = true;\n\t\t\tfolder_data['metadata_prov_stats'] = result;\n\t\t\tawait tick();\n\t\t\t// folder_data = [...folder_data];\n\t\t\tconsole.log(metadata);\n\t\t}\n\n\t\tfolder_data['metadata_show'] = true;\n\t\tif (browser) {\n\t\t\thistory.pushState({}, '', '?type=' + foldertype + '&filename=' + filename);\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\tif (browser) {\n\t\t\tloadFileInfo(foldertype, file);\n\t\t\tconsole.log(folder_data);\n\t\t}\n\t});\n</script>\n\n<div class=\"content-div\">\n\t<div class=\"flex\">\n\t\t<h1 class=\"content-heading\">File Information</h1>\n\t\t<img src={metadata_icon} alt=\"...\" width=\"30px\" />\n\t</div>\n\n\t<blockquote class=\"content-blockquote mb-4\">\n\t\tThis page shows detailed information for a single file in the Climate Services Gateway. Download\n\t\tis currently only available via the collection view.\n\t</blockquote>\n\n\t{#if folder_data && folder_data.metadata}\n\t\t<FileDetails {folder_data} {file_obj} {foldertype} {in_main_page} />\n\t{/if}\n</div>\n"],"names":["CanvasTileLayerRenderer","CanvasLayerRenderer","tileLayer","createEmpty","TileRange","tile","tileState","useInterimTilesOnError","TileState","z","x","y","frameState","pixelRatio","projection","pixel","layer","coordinate","applyTransform","layerExtent","containsCoordinate","viewState","source","tileGrid","tilePixelRatio","tileCoord","ImageTile","ReprojTile","tileOrigin","tileSize","toSize","tileResolution","col","row","gutter","tiles","zoom","target","layerState","viewResolution","viewCenter","rotation","tileSource","sourceRevision","extent","resolution","width","getWidth","height","getHeight","fromUserExtent","getIntersection","dx","dy","canvasExtent","tileRange","tilesToDrawByZ","findLoadedTiles","tmpExtent","tmpTileRange","viewport","getRotatedViewport","uid","getUid","inTransition","childTileRange","covered","canvasScale","composeTransform","canvasTransform","toTransformString","context","canvas","makeInverse","zs","ascending","clips","clipZs","currentClip","i","currentZ","currentTilePixelSize","currentScale","originTileCoord","getTopLeft","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","w","h","transition","contextSaved","ii","clip","intersects","equals","image","alpha","alphaChanged","postRenderFunction","map","tileSourceKey","usedTiles","preload","tileCallback","wantedTiles","tileQueue","minZoom","tileCount","TileLayer","BaseTileLayer","options","auto_description","filename","foldertype","metadata","variable_name","frequency","study_area","bias_correction","global_type","global_model","regional_model","period_1","period_2","mean","description","matchComparison","matchSingle","format_sentence","str","insert_hydration","div","anchor","$$props","drawExtentBox","minX","minY","maxX","maxY","polygon","Polygon","feature","Feature","vectorSource","VectorSource","vectorLayer","VectorLayer","Style","Stroke","Fill","onMount","Map","OSM","View","file_icon","format_c_bound","ctx","div0","append_hydration","span0","span1","div1","span2","span3","set_data","t2","t2_value","t6","t6_value","span","if_block","create_if_block_10","create_if_block_9","create_if_block_7","attr","a","a_href_value","API_URL","button","current","dirty","provenanceview_props","provenanceview_changes","_a","_b","_c","h20","h21","create_if_block_2","metadatadisplay_changes","t12_value","t16_value","t20_value","t24_value","round","t34_value","t38_value","t42_value","t48_value","t54_value","t56_value","t60_value","t64_value","t68_value","t72_value","t76_value","t84_value","t88_value","sizeofFmt","t92_value","t96_value","if_block0","create_if_block_12","if_block1","create_if_block_11","img","img_src_value","br","div30","div28","div25","div2","div3","div4","span4","div5","span5","span6","div6","span7","span8","div7","span9","span10","div8","span11","span12","div9","span13","span14","div10","span15","span16","div11","div12","span17","span18","div13","div14","span19","span20","div15","span21","span22","div16","span23","span24","div17","span25","span26","div18","span27","span28","div19","span29","span30","div20","div21","span31","span32","div22","span33","span34","div23","span35","span36","div24","span37","span38","div27","div26","div29","t12","t16","t20","t24","t28","t28_value","t30","t30_value","t34","t38","t42","t48","t54","t56","t60","t64","t68","t72","t76","t84","t88","t92","t96","value","start","end","folder_data","file_obj","in_main_page","e","random_id","tabSet","$$self","$$invalidate","selected_file","metadata_icon","create_if_block","blockquote","file","loadFileInfo","_fetch_file_info","get_metadata_and_prov","res","result","tick","res2","res3","urlParams","type"],"mappings":"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","x_google_ignoreList":[0,1]}